import libnum
import gmpy2
from binascii import a2b_hex
import rsa
from Crypto.Util.number import long_to_bytes

# p 和 q：两个大的质数，是另一个参数N的的两个因子。
# N：大整数，可以称之为模数
# e 和 d：互为无反数的两个指数
# c 和 m：密文和明文
# (N, e)：公钥
# (N, d)：私钥
# pow(x, y, z)：效果等效pow(x, y)1 % z， 先计算x的y次方，如果存在另一个参数z，需要再对结果进行取模。

# libnum.s2n("字符串")
#     libnum.s2n("flag")

# libnum.n2s(十进制或者十六进制)
#     libnum.n2s(0x666c6167)
#     libnum.n2s(1718378855)
#     long_to_bytes(m)

# libnum.b2s(二进制)
#     libnum.b2s('01100110011011000110000101100111')

# libnum.s2b("字符串")
#     libnum.s2b("flag")


#两个n里使用有相同的素数
def hubusu():

    # 如果是16进制则用以下方法转换
    # num = "C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD"
    # hex=int(num,16)   #hex=int("f",16)  需要使用双引号
    # hex=int(0xf)
    e = 65537
    n1 = 12247140809348479604921471564180586487768585815975746170325674578797616921111648927242702477878849872543969683338347814412280280399275967477718373503763524190496021552733372883417037599168498325950161981721729170194024953207334645938700509179172701603443701676513036373184117480412000162848957930926901064070342060594727138877649766670745134857766661764036934378476688442276560567422187850356210151257923786787091442756100156773140864849609124767854979536563389490085375904027659938964977986897654680889284563129640670232032177056725742821189174971727601008977911455116640309335831115420212521374638571714779847506053
    n2 = 18389822985082119646873913587686535874214217599602396974679000398857538596075663540768658488017065196549474272804093118445292224015944596918389865776422060181560031553109483806084574631951190591647750278938010564724055843810793254313504146882222599273288446350501419313914217291247904310021077585634116444021097314062184927716719544311927232109949949458910134433150322055082587361404772349528719519671478486138727923654663563448615598554419892665963321401035629306132188244405787222119955968919006345792782500580161509588811321029347982139894699422553101422836233000469197166308500535772366619674770468010760793069509
    c1 = 7452289103798793077695280417169419455166899701788901836734328155284739957725703294559430435103717320729650111554179307802466425440395009249676073483665440706798647037132729666567531235250930696928916715517814635114285584993316017358168840142715891235370969699037025285851393818308877470156970288072245494257783204219286929267254610734755131380439411294744543265526502113623373731011466745762574276043654138385178215058943331773948951832838630012210745419470596111338808224381556830581941343409140019735062104854628895647516786513885853749857584898509027997081419471042234127652413465022131369647282103361292021252058
    c2 = 7452289103798793077695280417169419455166899701788901836734328155284739957725703294559430435103717320729650111554179307802466425440395009249676073483665440706798647037132729666567531235250930696928916715517814635114285584993316017358168840142715891235370969699037025285851393818308877470156970288072245494257783204219286929267254610734755131380439411294744543265526502113623373731011466745762574276043654138385178215058943331773948951832838630012210745419470596111338808224381556830581941343409140019735062104854628895647516786513885853749857584898509027997081419471042234127652413465022131369647282103361292021252058

    # e_hex = 0x
    # n1_hex = 0x
    # n2_hex = 0x
    # c1_hex = 0x
    # c2_hex = 0x

    # e=int(e_hex,16)
    # n1 = int(n1_hex,16)
    # n2 = int(n2_hex,16)
    # c1 = int(c1_hex,16)
    # c2 = int(c2_hex,16)

    #求最大公约数
    q = gmpy2.gcd(n1, n2)
    p1 = n1 // q

    phi_n = (q - 1) * (p1 - 1)
    #求逆元d
    d1 = libnum.invmod(e, phi_n)
    m = pow(c1, d1, n1)
    print(m)
    # print(long_to_bytes(m))
    #数字转字节，转字符串
    print(libnum.n2s(int(m)).decode())


hubusu()
